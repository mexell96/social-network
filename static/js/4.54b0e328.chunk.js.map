{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","style","item","src","alt","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","memo","console","log","postsElements","posts","map","p","id","postsBlock","PostReduxForm","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","placeholder","name","component","Textarea","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","fullName","userId","Preloader","Profile","ProfileContainer","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,oBCAzBD,EAAOC,QAAU,CAAC,iBAAmB,wC,8MCmBtBC,EAlBF,SAACC,GACZ,OACE,8BACE,sBAAKC,UAAWC,IAAMC,KAAtB,UACE,qBACEC,IAAI,oEACJC,IAAI,WAELL,EAAMM,QACP,gCACE,wCACCN,EAAMO,oBCHXC,EAAcC,YAAiB,IAE/BC,EAAUC,IAAMC,MAAK,SAACZ,GAC1Ba,QAAQC,IAAId,EAAO,WACnB,IAAIe,EAAgBf,EAAMgB,MAAMC,KAAI,SAACC,GAAD,OAClC,cAAC,EAAD,CAAiBZ,QAASY,EAAEZ,QAASC,WAAYW,EAAEX,YAAxCW,EAAEC,OAOf,OACE,sBAAKlB,UAAWC,IAAMkB,WAAtB,UACE,0CACA,cAACC,EAAD,CAAeC,SAPH,SAACC,GACfvB,EAAMwB,QAAQD,EAAOE,gBAOnB,qBAAKxB,UAAWC,IAAMc,MAAtB,SAA8BD,UAuB9BM,EAAgBK,YAAU,CAAEC,KAAM,yBAAlBD,EAlBC,SAAC1B,GACtB,OACE,uBAAMsB,SAAUtB,EAAM4B,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CACEC,YAAa,kBACbC,KAAM,cACNC,UAAWC,IACXC,SAAU,CAACC,IAAU3B,OAGzB,8BACE,sDAUOE,ICjCA0B,EAFUC,aAdD,SAACC,GACvB,MAAO,CACLtB,MAAOsB,EAAMC,YAAYvB,UAIF,SAACwB,GAC1B,MAAO,CACLhB,QAAS,SAACC,GACRe,EAASC,YAAqBhB,QAKXY,CAA6C3B,G,mCC2BvDgC,EA3CgB,SAAC1C,GAAW,IAAD,EACV2C,oBAAS,GADC,mBACnCC,EADmC,KACzBC,EADyB,OAEdF,mBAAS3C,EAAM8C,QAFD,mBAEnCA,EAFmC,KAE3BC,EAF2B,KAIxCC,qBAAU,WACRD,EAAU/C,EAAM8C,UACf,CAAC9C,EAAM8C,SAaV,OACE,iCACIF,GACA,8BACE,sBAAMK,cAfW,WACvBJ,GAAY,IAcN,SACG7C,EAAM8C,QAAU,gBAKtBF,GACC,8BACE,uBACEM,SAjBa,SAACC,GACtBJ,EAAUI,EAAEC,cAAcC,QAiBlBC,WAAW,EACXC,OAvBiB,WACzBV,GAAY,GACZ7C,EAAMwD,aAAaV,IAsBXO,MAAOP,UCCJW,EAlCK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASZ,EAA2B,EAA3BA,OAAQU,EAAmB,EAAnBA,aAGtC,OAFA3C,QAAQC,IAAI4C,EAAS,eAEhBA,EAKH,8BACE,sBAAKzD,UAAWC,IAAMyD,iBAAtB,UACE,qBAAKvD,IAAKsD,EAAQE,OAAOC,MAAOxD,IAAI,WACpC,cAAC,EAAD,CAAwByC,OAAQA,EAAQU,aAAcA,IACtD,gCACE,8CAAiBE,EAAQI,WACzB,+CAAkBJ,EAAQK,SAASC,YACnC,8CAAiBN,EAAQK,SAASE,WAClC,yCAAYP,EAAQK,SAASG,MAC7B,8CAAiBR,EAAQK,SAASI,WAClC,gDAAmBT,EAAQK,SAASK,aACpC,8CAAiBV,EAAQK,SAASM,WAClC,6CAAgBX,EAAQK,SAASO,UACjC,+CAAkBZ,EAAQK,SAASQ,YACnC,qDAAwBb,EAAQc,eAAiB,MAAQ,QACzD,gEACgCd,EAAQe,6BAExC,+CAAkBf,EAAQgB,YAC1B,6CAAgBhB,EAAQiB,kBAvBvB,cAACC,EAAA,EAAD,KCSIC,EAdC,SAAC7E,GAEf,OADAa,QAAQC,IAAId,EAAO,WAEjB,gCACE,cAAC,EAAD,CACE0D,QAAS1D,EAAM0D,QACfZ,OAAQ9C,EAAM8C,OACdU,aAAcxD,EAAMwD,eAEtB,cAAC,EAAD,QCDAsB,E,uKACJ,WACE,IAAIH,EAASI,KAAK/E,MAAMgF,MAAMC,OAAON,OAChCA,IACHA,EAASI,KAAK/E,MAAMkF,mBAElBH,KAAK/E,MAAMmF,QAAQC,KAAK,UAG5BL,KAAK/E,MAAMqF,eAAeV,GAC1BI,KAAK/E,MAAMsF,UAAUX,K,oBAGvB,WACE,OACE,8BACE,cAAC,EAAD,2BACMI,KAAK/E,OADX,IAEE0D,QAASqB,KAAK/E,MAAM0D,QACpBZ,OAAQiC,KAAK/E,MAAM8C,OACnBU,aAAcuB,KAAK/E,MAAMwD,sB,GApBJ7C,IAAM4E,WAkCtBC,sBACbnD,aARoB,SAACC,GAAD,MAAY,CAChCoB,QAASpB,EAAMC,YAAYmB,QAC3BZ,OAAQR,EAAMC,YAAYO,OAC1BoC,iBAAkB5C,EAAMmD,KAAKd,OAC7Be,OAAQpD,EAAMmD,KAAKC,UAIM,CAAEL,mBAAgBC,cAAW9B,mBACtDmC,IAFaH,CAGbV","file":"static/js/4.54b0e328.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock___Z1jX\",\"posts\":\"MyPosts_posts__1lnrY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1dD35\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2EnZU\"};","import style from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div>\r\n      <div className={style.item}>\r\n        <img\r\n          src=\"https://cdn.iconscout.com/icon/free/png-256/avatar-370-456322.png\"\r\n          alt=\"avatar\"\r\n        />\r\n        {props.message}\r\n        <div>\r\n          <span>like</span>\r\n          {props.likesCount}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../common/FormControls/FormsControls\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n  console.log(props, \"MyPosts\");\r\n  let postsElements = props.posts.map((p) => (\r\n    <Post key={p.id} message={p.message} likesCount={p.likesCount} />\r\n  ));\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={style.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <PostReduxForm onSubmit={onAddPost} />\r\n      <div className={style.posts}>{postsElements}</div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          placeholder={\"Enter your post\"}\r\n          name={\"newPostText\"}\r\n          component={Textarea}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst PostReduxForm = reduxForm({ form: \"ProfileAddNewPostForm\" })(\r\n  AddNewPostForm\r\n);\r\n\r\nexport default MyPosts;\r\n","import { connect } from \"react-redux\";\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    },\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>\r\n            {props.status || \"No status\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            autoFocus={true}\r\n            onBlur={deactivateEditMode}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import Preloader from \"../../common/preloader/Preloader\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus }) => {\r\n  console.log(profile, \"ProfileInfo\");\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className={style.descriptionBlock}>\r\n        <img src={profile.photos.large} alt=\"avatar\" />\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        <div>\r\n          <div>\"aboutMe\": {profile.aboutMe}</div>\r\n          <div>\"facebook\": {profile.contacts.facebook}</div>\r\n          <div>\"website\": {profile.contacts.website}</div>\r\n          <div>\"vk\": {profile.contacts.vk}</div>\r\n          <div>\"twitter\": {profile.contacts.twitter}</div>\r\n          <div>\"instagram\": {profile.contacts.instagram}</div>\r\n          <div>\"youtube\": {profile.contacts.youtube}</div>\r\n          <div>\"github\": {profile.contacts.github}</div>\r\n          <div>\"mainLink\": {profile.contacts.mainLink}</div>\r\n          <div>\"lookingForAJob\": {profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n          <div>\r\n            \"lookingForAJobDescription\": {profile.lookingForAJobDescription}\r\n          </div>\r\n          <div>\"fullName\": {profile.fullName}</div>\r\n          <div>\"userId\": {profile.userId}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  console.log(props, \"Profile\");\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        profile={props.profile}\r\n        status={props.status}\r\n        updateStatus={props.updateStatus}\r\n      />\r\n      <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router\";\r\nimport { compose } from \"redux\";\r\nimport {\r\n  getStatus,\r\n  getUserProfile,\r\n  updateStatus,\r\n} from \"../../redux/profile-reducer\";\r\nimport Profile from \"./Profile\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile\r\n          {...this.props}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n  withRouter\r\n)(ProfileContainer);\r\n"],"sourceRoot":""}